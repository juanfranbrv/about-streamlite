import streamlit as st

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Ejemplo de Texto en Streamlit", page_icon="üìö")

# T√≠tulo de la aplicaci√≥n
st.title("üìö Ejemplo de Textos en Streamlit")
st.write("En esta aplicaci√≥n, exploraremos todas las formas de mostrar texto en Streamlit.")

# 1. Mostrar texto simple con st.write

st.write("`st.write` es el m√©todo m√°s vers√°til para mostrar texto y otros elementos en Streamlit. Puedes pasarle casi cualquier tipo de dato, y Streamlit intentar√° mostrarlo de la forma m√°s adecuada. por ejemplo *markdown* o emojis üéà")

# 2. T√≠tulo principal con st.title
st.title("Este es un t√≠tulo principal usando st.title")

# 3. T√≠tulo de secci√≥n con st.header
st.header("Este es un t√≠tulo de secci√≥n usando st.header")

# 4. Subt√≠tulo con st.subheader
st.subheader("Este es un subt√≠tulo usando st.subheader")

# 5. Texto fijo con st.text
st.text("Este es un texto fijo usando st.text. No permite *formato*.")

# 6. Mostrar c√≥digo con st.code
codigo = '''
st.title("Mi App")
st.write("¬°Bienvenidos a mi app!")
'''
st.code(codigo, language='python')

# 7. Mostrar ecuaciones con st.latex
st.header("7. Ecuaciones con st.latex")
st.write("Puedes mostrar ecuaciones matem√°ticas usando LaTeX:")
st.latex(r'''
e^{i\pi} + 1 = 0
''')

# 8. Mostrar Markdown con st.markdown
st.header("8. Markdown con st.markdown")
st.markdown("""
Puedes usar `st.markdown` para mostrar texto con formato **Markdown**.
* **Texto en negrita**
* *Texto en cursiva*
* ~~Texto tachado~~
* Citas: 
    > Esta es una cita en Markdown
* Enlaces: [Streamlit](https://streamlit.io)
""")

# Usando HTML en Markdown para cambiar el color a rojo
st.write("Atencion con markdown podemos incluir HTML y algo de CSS")

st.code("""
# Usando HTML en Markdown para cambiar el color a rojo
st.markdown("<h1 style='color: red;'>Este es un t√≠tulo en rojo</h1>", unsafe_allow_html=True)
st.markdown("<p style='color: blue;'>Este es un p√°rrafo en azul.</p>", unsafe_allow_html=True)
""", language="python")

st.markdown("<h1 style='color: red;'>Este es un t√≠tulo en rojo</h1>", unsafe_allow_html=True)
st.markdown("<p style='color: blue;'>Este es un p√°rrafo en azul.</p>", unsafe_allow_html=True)

st.write("Incluso podemos crear estilos en una linea, para poder usarlos posteriormete en esa pagina")

st.code("""
st.markdown(\"\"\"
    <style>
    .big-font {
        font-size:24px !important;
        color: purple;
    }
    </style>
    \"\"\", unsafe_allow_html=True)

st.markdown('<p class="big-font">Este es un texto en p√∫rpura con un tama√±o m√°s grande.</p>', unsafe_allow_html=True)
""", language="python")

st.markdown("""
    <style>
    .big-font {
        display: inline-block;
        font-weight: bold;
        font-size:28px !important;
        color: purple;
        background: yellow;
    }
    </style>
    """, unsafe_allow_html=True)

st.markdown('<p class="big-font">Este es un texto en p√∫rpura con un tama√±o m√°s grande.</p>', unsafe_allow_html=True)




# 9. Mostrar √≠conos y emojis en texto
st.header("9. √çconos y emojis en texto")
st.write("Puedes agregar √≠conos y emojis para hacer que la app sea m√°s visual y divertida.")
st.write("Aqu√≠ algunos ejemplos: üåç üìà üêç üéâ ‚úÖ")

# 10. Notificaciones de estado con st.success, st.info, st.warning, y st.error
st.header("10. Notificaciones de estado")
st.success("‚úÖ Esta es una notificaci√≥n de √©xito.")
st.info("‚ÑπÔ∏è Esta es una notificaci√≥n de informaci√≥n.")
st.warning("‚ö†Ô∏è Esta es una notificaci√≥n de advertencia.")
st.error("‚ùå Esta es una notificaci√≥n de error.")

# 11. Mostrar un mensaje personalizado con st.toast
st.header("11. Mensaje personalizado con st.toast")
st.toast("Este es un toast, un mensaje temporal que aparece en la esquina")

# 12. Texto personalizado en el sidebar
st.sidebar.header("Texto en la barra lateral")
st.sidebar.text("Este es un texto en la barra lateral.")
st.sidebar.markdown("### Secci√≥n en la barra lateral")

# Resumen
st.header("Resumen")
st.write("Este ejemplo incluye todas las formas principales de mostrar texto en Streamlit. Puedes experimentar con ellas para hacer tus aplicaciones m√°s interactivas y atractivas visualmente.")


